- name: 'Provision Image'
  hosts: default
  become: true
  vars:
    helm_version: v3.4.0
    helmfile_version: v0.134.0
    k3s_version: v1.19.3+k3s2
    radar_kubernetes_version: master
    sops_version: 3.6.1

  tasks:
    - name: Set a static hostname for consistancy
      ansible.builtin.hostname:
        name: radar-base

    - name: Don't change hostname after boot
      copy:
        dest: /etc/cloud/cloud.cfg.d/90_hostname.cfg
        content: 'preserve_hostname: True'

    - name: Copy Helmfile sync to cloud-init
      copy:
        src: files/cloud-init.cfg
        dest: /etc/cloud/cloud.cfg.d/99_helmfile_sync.cfg

    - name: Install packages
      package:
        name:
          - git
          - openjdk-11-jre
          - net-tools
        state: present

    - name: Create temporary helm directory
      file:
        path: /tmp/helm
        state: directory
        mode: '0755'

    - name: Download Helm archive
      get_url:
        url: https://get.helm.sh/helm-{{ helm_version }}-linux-amd64.tar.gz
        dest: /tmp/helm/helm.tar.gz

    - name: Extract Helm archive
      unarchive:
        src: /tmp/helm/helm.tar.gz
        dest: /tmp/helm
        remote_src: true

    - name: Move Helm binary to bin directory
      copy:
        src: /tmp/helm/linux-amd64/helm
        dest: /usr/local/bin/helm
        mode: '0755'
        remote_src: true

    - name: Remove temporary helm directory
      file:
        path: /tmp/helm
        state: absent

    - name: Install sops
      apt:
        deb: https://github.com/mozilla/sops/releases/download/v{{ sops_version }}/sops_{{ sops_version }}_amd64.deb

    - name: Install helm-secrets
      command: helm plugin install https://github.com/jkroepke/helm-secrets

    - name: Install helm-diff
      command: helm plugin install https://github.com/databus23/helm-diff

    - name: Instal Helmfile
      get_url:
        url: https://github.com/roboll/helmfile/releases/download/{{ helmfile_version }}/helmfile_linux_amd64
        dest: /usr/local/bin/helmfile
        mode: '0755'

    - name: Get K3S installation script
      environment:
        INSTALL_K3S_VERSION: "{{ k3s_version }}"
      get_url:
        url: https://get.k3s.io/
        dest: /opt/k3s-install.sh
        mode: '0755'

    - name: Create K3S config directory
      file:
        path: /etc/rancher/k3s
        state: directory
        mode: '0755'

    - name: Copy K3S configuration
      copy:
        src: files/k3s-config.yaml
        dest: /etc/rancher/k3s/config.yaml

    - name: Install K3S
      command: /opt/k3s-install.sh

    - name: Get RADAR-Kubernetes
      git:
        repo: 'https://github.com/RADAR-base/RADAR-Kubernetes.git'
        dest: /opt/RADAR-Kubernetes
        version: "{{ radar_kubernetes_version }}"

    # - name: Get RADAR-Kubernetes
    #   copy:
    #     src: files/RADAR-Kubernetes
    #     dest: /opt/

    - name: Create environments.yaml
      copy:
        src: templates/environments.yaml
        dest: /opt/RADAR-Kubernetes/environments.yaml

    - name: Create production.yaml
      copy:
        src: templates/production.yaml
        dest: /opt/RADAR-Kubernetes/production.yaml

    - name: Create production.yaml.gotmpl
      copy:
        src: templates/production.yaml.gotmpl
        dest: /opt/RADAR-Kubernetes/production.yaml.gotmpl

    - name: Create custom.yaml
      copy:
        src: templates/custom.yaml
        dest: /opt/RADAR-Kubernetes/custom.yaml

    - name: Create temporary helm directory
      file:
        path: /opt/RADAR-Kubernetes/bin/keystore-init
        mode: '0755'

    - name: Create MP keys
      command:
        cmd: /opt/RADAR-Kubernetes/bin/keystore-init
        chdir: /opt/RADAR-Kubernetes/
      environment:
        MANAGEMENTPORTAL_KEY_DNAME: "cn=Unknown,ou=Unknown,o=Unknown,c=Unknown"

    - name: Create kubectl completion file
      shell: kubectl completion bash > /etc/rancher/k3s/completion.bash.inc

    # TODO: change this into a loop and find all of the users and add this line to them
    - name: Add kubectl completion config to bashrc of root user
      lineinfile:
        path: /root/.bashrc
        line: source '/etc/rancher/k3s/completion.bash.inc'
        create: yes

    - name: Add kubectl completion config to bashrc of ubuntu user
      lineinfile:
        path: /home/ubuntu/.bashrc
        line: source '/etc/rancher/k3s/completion.bash.inc'
        create: yes

    - name: Add kube config path to bashrc of root user
      lineinfile:
        path: /root/.bashrc
        line: export KUBECONFIG="/etc/rancher/k3s/k3s.yaml"
        create: yes

    - name: Add kube config path to bashrc of ubuntu user
      lineinfile:
        path: /home/ubuntu/.bashrc
        line: export KUBECONFIG="/etc/rancher/k3s/k3s.yaml"
        create: yes

    - name: Install the RADAR-Kubernetes (Init)
      command:
        cmd: helmfile -f helmfile.d/00-init.yaml sync --concurrency 1
        chdir: /opt/RADAR-Kubernetes/
      environment:
        KUBECONFIG: "/etc/rancher/k3s/k3s.yaml"

    - name: Install the RADAR-Kubernetes (Base)
      command:
        cmd: helmfile -f helmfile.d/10-base.yaml sync --concurrency 1
        chdir: /opt/RADAR-Kubernetes/
      environment:
        KUBECONFIG: "/etc/rancher/k3s/k3s.yaml"

    - name: Install the RADAR-Kubernetes (Management Portal)
      command:
        cmd: helmfile -f helmfile.d/10-managementportal.yaml sync --concurrency 1
        chdir: /opt/RADAR-Kubernetes/
      environment:
        KUBECONFIG: "/etc/rancher/k3s/k3s.yaml"
    #
    # - name: Install the RADAR-Kubernetes (Fitbit)
    #   command:
    #     cmd: helmfile -f helmfile.d/20-fitbit.yaml sync --concurrency 1
    #     chdir: /opt/RADAR-Kubernetes/
    #   environment:
    #     KUBECONFIG: "/etc/rancher/k3s/k3s.yaml"
    #
    # - name: Install the RADAR-Kubernetes (Grafana)
    #   command:
    #     cmd: helmfile -f helmfile.d/20-grafana.yaml sync --concurrency 1
    #     chdir: /opt/RADAR-Kubernetes/
    #   environment:
    #     KUBECONFIG: "/etc/rancher/k3s/k3s.yaml"
    #
    # - name: Install the RADAR-Kubernetes (Ingestion)
    #   command:
    #     cmd: helmfile -f helmfile.d/20-ingestion.yaml sync --concurrency 1
    #     chdir: /opt/RADAR-Kubernetes/
    #   environment:
    #     KUBECONFIG: "/etc/rancher/k3s/k3s.yaml"
    #
    # - name: Install the RADAR-Kubernetes (Kafka Analysis)
    #   command:
    #     cmd: helmfile -f helmfile.d/20-kafka-analysis.yaml sync --concurrency 1
    #     chdir: /opt/RADAR-Kubernetes/
    #   environment:
    #     KUBECONFIG: "/etc/rancher/k3s/k3s.yaml"
    #
    # - name: Install the RADAR-Kubernetes (Redcap)
    #   command:
    #     cmd: helmfile -f helmfile.d/20-redcap.yaml sync --concurrency 1
    #     chdir: /opt/RADAR-Kubernetes/
    #   environment:
    #     KUBECONFIG: "/etc/rancher/k3s/k3s.yaml"
    #
    # - name: Install the RADAR-Kubernetes (S3)
    #   command:
    #     cmd: helmfile -f helmfile.d/20-s3.yaml sync --concurrency 1
    #     chdir: /opt/RADAR-Kubernetes/
    #   environment:
    #     KUBECONFIG: "/etc/rancher/k3s/k3s.yaml"
    #
    # - name: Install the RADAR-Kubernetes (Upload)
    #   command:
    #     cmd: helmfile -f helmfile.d/20-upload.yaml sync --concurrency 1
    #     chdir: /opt/RADAR-Kubernetes/
    #   environment:
    #     KUBECONFIG: "/etc/rancher/k3s/k3s.yaml"
    #
    # - name: Install the RADAR-Kubernetes (Confluent Cloud)
    #   command:
    #     cmd: helmfile -f helmfile.d/30-confluent-cloud.yaml sync --concurrency 1
    #     chdir: /opt/RADAR-Kubernetes/
    #   environment:
    #     KUBECONFIG: "/etc/rancher/k3s/k3s.yaml"
    #
    # - name: Install the RADAR-Kubernetes (Velero)
    #   command:
    #     cmd: helmfile -f helmfile.d/99-velero.yaml sync --concurrency 1
    #     chdir: /opt/RADAR-Kubernetes/
    #   environment:
    #     KUBECONFIG: "/etc/rancher/k3s/k3s.yaml"

    - name: Delete K3S node
      command: kubectl delete node --all
